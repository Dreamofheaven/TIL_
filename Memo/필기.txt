사실 : 모든 카드의 한쪽에는 알파벳 / 다른 쪽은 숫자
주장 : 만약 한족이 D이면 반대쪽은 3이다.
문제 : 주장이 사실인지 확인하고 싶음
제가 가지고 있는 카드는..

D F 3 7
이중에서 반드시 뒤집어야하는 카드는 몇개일까요?
-> 2개이다. D와 7

함수는 명시적인 리턴문이 없는 경우 : None 반환
여러값을 리턴하는 경우 : tuple

선택 알규먼트 -> end나 sep

<객체 지향 프로그래밍>
객체를 지향한다. 객체를 중심으로 프로그래밍을 한다는 것
그 객체가 무엇이냐? 그 어떠한 데이터ㅡ 속성을 가지고 기능들 메서드릉ㄹ
활용할 수 있는 것 

리스트를 조작, 

<클래스>
의미가 있는 것을 개별적으로 활용할 수 없을까?

=============================
2023년 1월 19일
<코딩테스트 시작하기>
1.알고리즘, 코딩테스트?
어떤 문제를 해결하기 위해 정해진 일련의 절차나 행동, 
문제란 input을 넣었을 때, 원하는 output이 나오도록 하는 것

코딩테스트는 기업에서 지원자를 대상으로 코딩을 통한
알고리즘 기반 문제 해결 능력을 테스트 하는 것

알고리즘 문제에는 어떤 항목들이 있을까?
1) 문제이름 2) 난이도 3) 제한 및 통계 4)문제 내용
5) 테스트케이스 

왜 이런 알고리즘을 통한 코딩테스트를 하는 이뉴는?
문제의도를 파악하고, 적절한 해결 방법을 적용할 수 있는지?
해결방법을 프로그래밍을 통해 능숙하게 구현할 수 있는가?

코딩테스트 : 문제파악 해결방법구상 정답구현
현업 : 비지니스문제발생 해결방법구상 구현및수정

개발자가 되면 '개발' '프로그래밍' '코딩'
엘리베이터가 사용하는데 사람들이 너무 느리고, 지루하다.
속도를 높히거나, 매칭되는 알고리즘을 개선 
여기에 거울을 거는 것도 개발자이다. 
개발자는 문제 해결을 하는 사람(기술을 좀 아는)

코드를 줄여쓸 필요는 없다.
한 줄의 코드는 무조건 반복, 조건문으로 풀어나갈 수 있다.
map, list comprehension

내가 이해하기 좋은 코드인지, 내가 풀 수 이는 형태의 코드인지
지금은 테크닉 신경X, 90~95%: 문자열, 리스트, 5~10% : 딕셔너리, 세트
문제 상황에 따라서 더 적합한 도구가 필요하다.
문제를 더 효율적으로 풀기 위한 도구가 필요하니, 그거를 생각해야한다.
파이썬 데이터타입, 같은거르 더 넘어서 다른ㄷ 데이터 구조를 배워나갈 것이다.

파이썬의 기본 데이터 구조
컨테이너 -> 시퀀스형
             -> 비시퀀스형

도구의 특성을 알아야 제대로 활용할 수 있다.
데이터 구조 -> 알고리즘

코딩테스트를 정복하기 위한 데이터 구조와 알고리즘
배열, 연결리스트, 해시, 스택, 큐, 우선순위 큐, 힙, 트리, 그래프
완젙탐색, 재귀, 시뮬레이션 그리디, dfs, bfs, 백트래킹, 이진탐색,
dp, 다익스트라, 크루스칼, 프림

<1. 입력&출력>

