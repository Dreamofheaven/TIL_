<2023년 2월 13일 월요일>
검색 환경이 바뀌고 있다. 크게는 chatGPT
Bing이라는 검색 서비스가 있다. 
-> 웹에서 탐색을 해서 추천을 해줌

검색의 페러다임이 점점 바뀌고 있다. 무너지지 않을 것 같았떤 구글의 검색시장을 bing이 조금씩
점유하기 시작했다. 
기존의 방식들도 유지가 되겠지만 이제는 스스로 탐색해서 추천해주는 방식

chatGPT 개발사 :OpenAI 

<4. SQL - Single Table  Queries 2>
DQL 데이터 검색 SELECT

3) Filtering data
검색 결과의 중복을 제거하거나, 특정 조건을 설정
ex) 키가 170이상인 사람을 조회하세요. 

[Filtering data 관련 키워드]
-> Clause 
-> 


[1] 중복 제거 : DISTINCT clause
-> 조회 결과에서 중복된 레코드 제거

- 문법
SELET DISTINCT 
 select_list
FROM
 table_name;

[2] 특정 조건 검색 WHERE clause
-> 조회 시 특정 조건 검색 지정 

- 문법 :
SELET DISTINCT 
 select_list
FROM
 table_name
WHERE
 search_condition;
서치 컨디션에는 비교 연산자나 논리연산자를 사용하는 구문이 사용된다. 

<WHERE practice #1>

<1> 특정 패턴 일치 LIKE operator
-> 값이 특정 패턴에 일치하는지 확인 with Wildcards
비슷한거 -> _ (언더바) 언더바의 특징은 언더바 자리에 값이 무조건 하나가 있어야한다. 
%는 그 자리에 값이 있거나 개수가 몇개인지는 상관이 없어
그런데 언더바는 그 자리에 값이있어야함 그래서 개수도 상관있어

LIKE '%특정찾는것' 0개 이상의 문자열과 일치하는지 확인
LIKE '_특정찾는것' 단일문자와 일치하는지 확인

<2> 비교연산자 Comparison Operator
=, >=, <=, !=, IS, IN, BETWEEN, AND

<3> 논리연산자 
AND(&&), OR(||), NOR

<4> IN Operator

<샘플 문제>
전화번호를 조회 해야하는데 전화번호 가운데 4자리가 95로 시작하는 전화번호를 조회하시오.

LIKE '%-95__-%';

[3] 수를 제한 LIMIT clause
-> 조회하는 레코드 수를 제한
수입, 연봉, 상위 몇명이라고 했을 때 정렬과 많이 쓰게되겠죠
정렬을 한다음에 

- 문법
SELECT
FROM
LIMIT [offset,] row_count;
 
하나 또는 두 개의 인자를 사용(0 또는 양의 정수) / row_count는 조회할 최대 레코드 수를 지정
자르는 기준의 시작점이 처음부터
예를 들면, 3번째에서 첫번쨰까지 오고 싶을 떄
345 / 1,2는 제외 오프셋 

[4] GROUP BY clause
-> 레코드를 그룹화하여 요약본 생성 with 집계 함수
ex) 각각의 성씨가 몇몇씩 있는지 조회
각각의 레코드가 그룹이 지어져야한다. 요약해야한다. 

- Aggregation Functions
값에 대한 계산을 수행하고, 단일한 값을 반환하는 함수 
SUM, AVG, MAX, MIN, COUNT

- WHERE랑 같이 쓴다면, FROM 및 WHERE 절 뒤에 쓰기
그룹화해서 중복이 없어짐, 같은 것끼리 그룹을 지어서
이 직업을 몇명이 각각 가지고 있는지를 카운팅을 할 것 이다.

집계합수 COUNT(*)

<SELECT statement 실행 순서>
1. 테이블에서(FROM)
2. 특정 조건에 맞춰(WHERE)
3. 그룹화를 하고 (GROUP BY)
4. 만약 그룹 중에 조건이 있다면 (HAVING)
5. 조회하여(SELECT)
6. 정렬하고 (ORDER BY)
7. 특정 위치의 값을 갖뎌온다. (LIMIT)

99. 참고
<정렬에서의 NULL>
-> MySQL에서 NULL은 NULL이 아닌 값 앞에 위치
NULL값이 존재할 경우 오름차순 정렬 시 결과에서 NULL이 먼저 출력 



